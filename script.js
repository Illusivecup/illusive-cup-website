// === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø FIREBASE ===
const firebaseConfig = {
    apiKey: "AIzaSyAjUojB-m0TdI604jwsIXGOHGLdGBmC64",
    authDomain: "illusive-cup.firebaseapp.com",
    databaseURL: "https://illusive-cup-default-rtdb.europe-west1.firebasedatabase.app",
    projectId: "illusive-cup",
    storageBucket: "illusive-cup.firebasestorage.app",
    messagingSenderId: "465786550229",
    appId: "1:465786550229:web:9a1d4a3015bbcb8a3ca75c"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
try {
    firebase.initializeApp(firebaseConfig);
    console.log('üî• Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω!');
} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ Firebase:', error);
}

const database = firebase.database();

// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===
let isEditor = false;
let currentEditingTeamId = null;
let teamsData = {};

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï ===
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
});

async function initializeApp() {
    createAnimatedBackground();
    checkEditorAccess();
    setupRealTimeListeners();
    loadInitialData();
}

// === –ü–†–û–í–ï–†–ö–ê –ü–†–ê–í –†–ï–î–ê–ö–¢–û–†–ê ===
function checkEditorAccess() {
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get('editor') === 'true') {
        isEditor = true;
        document.getElementById('adminBtn').classList.remove('hidden');
        console.log('üëë –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    }
}

// === –°–û–ó–î–ê–ù–ò–ï –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–û–ì–û –§–û–ù–ê ===
function createAnimatedBackground() {
    const bg = document.getElementById('animatedBg');
    const particleCount = 15;
    
    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('particle');
        
        const size = Math.random() * 10 + 5;
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        particle.style.left = `${Math.random() * 100}%`;
        particle.style.animationDelay = `${Math.random() * 20}s`;
        particle.style.animationDuration = `${15 + Math.random() * 10}s`;
        
        bg.appendChild(particle);
    }
}

// === REAL-TIME –°–õ–£–®–ê–¢–ï–õ–ò FIREBASE ===
function setupRealTimeListeners() {
    // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∫–æ–º–∞–Ω–¥
    database.ref('teams').on('value', (snapshot) => {
        teamsData = snapshot.val() || {};
        console.log('üì• –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã:', teamsData);
        updateTeamsDropdown();
        displayTeamsCards();
        updateConnectionStatus(true);
    }, (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–∞–Ω–¥:', error);
        updateConnectionStatus(false);
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Å–µ—Ç–∫–∏
    database.ref('bracket').on('value', (snapshot) => {
        const bracketData = snapshot.val();
        console.log('üì• –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å–µ—Ç–∫–∞:', bracketData);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ—Ç–∫–∏
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    database.ref('schedule').on('value', (snapshot) => {
        const scheduleData = snapshot.val();
        console.log('üì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:', scheduleData);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    });
}

// === –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø ===
function updateConnectionStatus(connected) {
    const status = document.getElementById('connectionStatus');
    const dot = status.querySelector('.status-dot');
    const text = status.querySelector('.status-text');
    
    if (connected) {
        dot.classList.add('connected');
        text.textContent = '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Ç—É—Ä–Ω–∏—Ä—É';
    } else {
        dot.classList.remove('connected');
        text.textContent = '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
    }
}

// === –û–ë–ù–û–í–õ–ï–ù–ò–ï –í–´–ü–ê–î–ê–Æ–©–ï–ì–û –°–ü–ò–°–ö–ê –ö–û–ú–ê–ù–î ===
function updateTeamsDropdown() {
    const dropdown = document.getElementById('teamsDropdown');
    dropdown.innerHTML = '';
    
    Object.keys(teamsData).forEach(teamId => {
        const team = teamsData[teamId];
        const link = document.createElement('a');
        link.textContent = team.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
        link.onclick = () => showTeamCard(teamId);
        dropdown.appendChild(link);
    });
}

// === –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –ö–ê–†–¢–û–ß–ï–ö –ö–û–ú–ê–ù–î ===
function displayTeamsCards() {
    const container = document.getElementById('teamsContent');
    container.innerHTML = '';
    
    Object.keys(teamsData).forEach(teamId => {
        const team = teamsData[teamId];
        const card = createTeamCard(teamId, team);
        container.appendChild(card);
    });
}

// === –°–û–ó–î–ê–ù–ò–ï –ö–ê–†–¢–û–ß–ö–ò –ö–û–ú–ê–ù–î–´ ===
function createTeamCard(teamId, team) {
    const card = document.createElement('div');
    card.className = 'team-visiting-card';
    card.innerHTML = `
        <div class="card-header">
            <div class="header-highlight"></div>
            <div class="team-name-bublas">${team.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</div>
            <div class="team-subtitle">${team.slogan || '–ì–æ—Ç–æ–≤—ã –∫ –ø–æ–±–µ–¥–µ!'}</div>
        </div>
        <div class="team-card-content">
            <div class="players-section-bublas">
                <div class="section-title-bublas">–°–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥—ã</div>
                <div class="player-grid-bublas">
                    ${(team.players || []).map(player => `
                        <div class="player-card-bublas">
                            <div class="player-role-bublas">${player.role || '–ò–≥—Ä–æ–∫'}</div>
                            <div class="player-name-bublas">${player.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</div>
                        </div>
                    `).join('')}
                </div>
            </div>
            <div class="stats-section-bublas">
                <div class="mmr-display-bublas">
                    <div class="mmr-label-bublas">–°—Ä–µ–¥–Ω–∏–π MMR</div>
                    <div class="mmr-value-bublas">${team.mmr || '0'}</div>
                </div>
                <div class="tournament-section-bublas">
                    <div class="tournament-text-bublas">Illusive Cup</div>
                    <div class="tournament-badge-bublas">2025</div>
                </div>
            </div>
        </div>
        <div class="team-footer-bublas">
            –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ
            ${isEditor ? `<button onclick="editTeam('${teamId}')" class="edit-team-btn">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>` : ''}
        </div>
    `;
    return card;
}

// === –ù–ê–í–ò–ì–ê–¶–ò–Ø ===
function toggleDropdown() {
    document.querySelector('.dropdown').classList.toggle('active');
}

function showTeamCard(teamId) {
    showTeams();
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–æ–ª–ª –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
    const card = document.querySelector(`[data-team-id="${teamId}"]`);
    if (card) {
        card.scrollIntoView({ behavior: 'smooth' });
    }
}

function showTeams() {
    hideAllSections();
    document.getElementById('teamsContent').classList.remove('hidden');
}

function showBracket() {
    hideAllSections();
    document.getElementById('bracketContent').classList.remove('hidden');
}

function showSchedule() {
    hideAllSections();
    document.getElementById('scheduleContent').classList.remove('hidden');
}

function showAdminPanel() {
    document.getElementById('adminPanel').classList.remove('hidden');
}

function closeAdminPanel() {
    document.getElementById('adminPanel').classList.add('hidden');
}

function hideAllSections() {
    document.querySelectorAll('.content-section').forEach(section => {
        section.classList.add('hidden');
    });
}

// === –ó–ê–ì–†–£–ó–ö–ê –ù–ê–ß–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–• ===
function loadInitialData() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    // –î–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å–ª—É—à–∞—Ç–µ–ª–∏
}

// === –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò –†–ï–î–ê–ö–¢–û–†–ê ===
function editTeam(teamId) {
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:', teamId);
    currentEditingTeamId = teamId;
    const team = teamsData[teamId];
    
    document.getElementById('editTeamName').value = team.name || '';
    document.getElementById('editTeamSlogan').value = team.slogan || '';
    document.getElementById('editTeamMMR').value = team.mmr || '';
    
    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤
    const playersContainer = document.getElementById('playersEditContainer');
    playersContainer.innerHTML = '';
    
    (team.players || []).forEach((player, index) => {
        addPlayerField(player.name, player.role);
    });
    
    document.getElementById('editTeamModal').classList.remove('hidden');
}

function addPlayerField(name = '', role = '') {
    const container = document.getElementById('playersEditContainer');
    const playerDiv = document.createElement('div');
    playerDiv.className = 'player-edit-row';
    playerDiv.innerHTML = `
        <input type="text" placeholder="–ò–º—è –∏–≥—Ä–æ–∫–∞" value="${name}" class="player-name-input">
        <input type="text" placeholder="–†–æ–ª—å" value="${role}" class="player-role-input">
        <button type="button" onclick="this.parentElement.remove()" class="remove-player">üóëÔ∏è</button>
    `;
    container.appendChild(playerDiv);
}

function saveTeamChanges() {
    if (!currentEditingTeamId) return;
    
    const name = document.getElementById('editTeamName').value;
    const slogan = document.getElementById('editTeamSlogan').value;
    const mmr = document.getElementById('editTeamMMR').value;
    
    const players = [];
    document.querySelectorAll('.player-edit-row').forEach(row => {
        const nameInput = row.querySelector('.player-name-input');
        const roleInput = row.querySelector('.player-role-input');
        if (nameInput.value.trim()) {
            players.push({
                name: nameInput.value,
                role: roleInput.value || '–ò–≥—Ä–æ–∫'
            });
        }
    });
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ Firebase
    database.ref('teams/' + currentEditingTeamId).update({
        name: name,
        slogan: slogan,
        mmr: mmr,
        players: players
    });
    
    closeEditTeamModal();
    alert('‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!');
}

function closeEditTeamModal() {
    document.getElementById('editTeamModal').classList.add('hidden');
    currentEditingTeamId = null;
}

function openAdminTab(tabName) {
    document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.tab-pane').forEach(pane => pane.classList.remove('active'));
    
    document.querySelector(`[onclick="openAdminTab('${tabName}')"]`).classList.add('active');
    document.getElementById(tabName).classList.add('active');
}

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã
function updateTeamsSettings() {
    alert('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function saveBracketChanges() {
    alert('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function saveScheduleChanges() {
    alert('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function addScheduleMatch() {
    alert('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!');
